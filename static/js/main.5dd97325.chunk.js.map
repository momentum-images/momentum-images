{"version":3,"sources":["footer.js","brand.js","meta-data.js","header.js","home.js","loading.js","image.js","portfolio.js","fetch-images.js","contact.js","about.js","tcs.js","thanks.js","not-found.js","main.js","accept-cookies.js","app.js","serviceWorkerRegistration.js","index.js"],"names":["className","href","target","rel","icon","faFacebookF","faInstagram","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","title","description","path","image","Helmet","name","content","property","RouteHead","src","alt","useState","active","setActive","history","useHistory","useEffect","listen","location","action","exact","to","onClick","Placeholder","ref","Image","orientation","debounceDurationMs","placeholder","actual","imageProps","portfolio","useParams","images","data","map","file","split","index","Number","size","sort","left","right","fetchImages","check","Validator","messages","email","stringEmpty","emailEmpty","string","compile","type","empty","message","errors","disabled","loading","form","setState","validate","value","key","newErrors","validation","forEach","field","Object","keys","length","submit","a","fetch","method","mode","headers","accept","body","JSON","stringify","ok","push","console","log","onSubmit","evt","preventDefault","htmlFor","id","onChange","faFilePdf","search","useLocation","qs","parse","ignoreQueryPrefix","clicked","setClicked","show","window","rejected","cookies","getJSON","document","__defineGetter__","__defineSetter__","defineProperty","get","set","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","rootElement","getElementById","hasChildNodes","hydrate","render","URL","process","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5dd97325.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebookF, faInstagram } from '@fortawesome/free-brands-svg-icons'\n\nexport default () => (\n  <footer className='footer is-lato'>\n    <section className='section'>\n      <div className='container'>\n        <div className='level'>\n          <div className='level-left'>\n            <div className='level-item'>\n              Melanie Preston\n            </div>\n            <div className='level-item is-hidden-touch'>\n              -\n            </div>\n            <div className='level-item'>\n              Momentum Images 2020\n            </div>\n          </div>\n          <div className='level-left'>\n            <div className='level-item'>\n              <a href='https://www.facebook.com/momentum.images.uk' target='_blank' rel='noopener noreferrer'>\n                <span className='icon'>\n                  <FontAwesomeIcon icon={faFacebookF} />\n                </span>\n              </a>\n              <a href='https://www.instagram.com/momentum.images' target='_blank' rel='noopener noreferrer'>\n                <span className='icon'>\n                  <FontAwesomeIcon icon={faInstagram} />\n                </span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </footer>\n)\n","import React from 'react'\n\nexport default () => (\n  <svg className='brand' width='642' height='630' viewBox='0 0 642 630' fill='white' xmlns='http://www.w3.org/2000/svg'>\n    <path fillRule='evenodd' clipRule='evenodd' d='M385.763 0L386.253 0.536377L439.439 58.7445L506.166 58.8779L506.893 58.8794L507.116 59.5708L527.34 122.24L599.833 154.626L600.496 154.922L600.42 155.645L592.864 226.66L640.951 279.288L641.441 279.825L641.083 280.457L601.118 350.86L620.646 411.373L620.869 412.064L620.28 412.49L569.16 449.475L560.446 531.387L560.369 532.109L559.658 532.259L489.764 547.023L454.68 608.828L454.321 609.46L453.609 609.314L371.493 592.486L320.78 629.176L320.192 629.602L319.605 629.174L270.492 593.341L189.953 610.353L189.242 610.503L188.879 609.874L153.105 547.729L83.7074 533.506L82.9956 533.361L82.9144 532.639L73.5818 449.675L20.9737 411.292L20.3868 410.864L20.6127 410.173L39.9284 351.127L0.362473 282.396L0 281.766L0.486832 281.227L48.6332 227.891L40.7054 157.416L40.6242 156.694L41.2857 156.393L114.506 123.151L135.548 58.828L135.774 58.1375L136.5 58.1389L201.752 58.2693L253.683 0.740723L254.17 0.201416L254.833 0.497803L320.273 29.7328L385.102 0.300293L385.763 0ZM385.267 2.42175L436.724 58.739L384.969 58.6356L322.711 30.8223L385.267 2.42175ZM254.681 2.62024L317.841 30.8369L257.173 58.3801L204.441 58.2747L254.681 2.62024ZM320.279 31.9263L261.99 58.3898L380.043 58.6257L320.279 31.9263ZM202.639 60.2711L252.787 60.3713L167.661 99.0187L202.639 60.2711ZM257.604 60.381L164.302 102.74L99.9763 173.999L58.7575 300.001L69.918 399.214L114.892 477.339L230.237 561.495L322.278 580.358L410.644 561.692L526.872 477.602L572.755 396.772L582.94 301.043L541.888 173.835L475.646 101.336L384.54 60.6348L257.604 60.381ZM199.949 60.2657L163.096 101.091L116.977 122.029L137.223 60.1404L199.949 60.2657ZM159.736 104.813L116.133 124.609L101.508 169.318L159.736 104.813ZM42.7741 157.914L113.662 125.731L98.2074 172.974L50.4228 225.909L42.7741 157.914ZM2.45827 282.028L48.9318 230.545L56.7214 299.792L40.7646 348.571L2.45827 282.028ZM50.7214 228.563L58.219 295.214L96.676 177.655L50.7214 228.563ZM42.1064 350.901L57.2599 304.579L67.4166 394.868L42.1064 350.901ZM41.2702 353.458L67.9771 399.851L73.2784 446.978L22.7395 410.104L41.2702 353.458ZM84.8206 531.693L75.7743 451.274L113.37 478.704L151.773 545.414L84.8206 531.693ZM190.25 608.246L155.721 548.265L229.409 563.367L268.319 591.756L190.25 608.246ZM154.389 545.95L225.518 560.528L117.349 481.607L154.389 545.95ZM270.951 591.2L234.128 564.334L317.372 581.394L270.951 591.2ZM273.123 592.785L322.284 582.401L368.835 591.941L320.197 627.13L273.123 592.785ZM453.299 607.209L373.692 590.895L411.473 563.561L487.151 547.575L453.299 607.209ZM558.534 530.453L491.083 544.7L528.397 478.967L566.981 451.052L558.534 530.453ZM488.469 545.252L524.494 481.791L415.463 560.674L488.469 545.252ZM567.265 448.377L530.774 474.778L572.225 401.758L567.265 448.377ZM569.444 446.801L574.7 397.398L599.778 353.22L618.519 411.296L569.444 446.801ZM638.985 280.101L600.284 348.277L584.973 300.833L592.582 229.316L638.985 280.101ZM598.354 156.156L591.063 224.688L543.658 172.807L528.166 124.799L598.354 156.156ZM590.78 227.344L545.137 177.391L583.461 296.146L590.78 227.344ZM525.71 123.702L540.409 169.251L480.223 103.381L525.71 123.702ZM524.884 121.143L476.841 99.6794L441.269 60.7482L505.436 60.8765L524.884 121.143ZM438.555 60.7427L472.263 97.6344L389.466 60.6445L438.555 60.7427ZM575.231 392.412L598.944 350.637L584.452 305.73L575.231 392.412ZM327.189 581.364L371.033 590.35L406.654 564.579L327.189 581.364ZM70.4785 404.196L75.4709 448.577L110.913 474.436L70.4785 404.196ZM510.014 293.185C510.014 294.293 510.889 294.935 511.764 294.935C512.581 294.935 513.456 294.293 513.456 293.01V290.385C513.456 285.834 513.397 278.426 513.339 275.976C513.164 270.259 509.022 267.226 504.531 267.226C501.147 267.226 497.647 268.917 495.43 272.359C494.264 268.859 490.997 267.226 487.614 267.226C484.639 267.226 481.489 268.509 479.622 270.901C479.563 271.017 479.505 271.076 479.447 271.076C479.388 271.076 479.388 270.959 479.388 270.726V269.151C479.388 268.042 478.572 267.517 477.755 267.517C476.88 267.517 476.063 268.042 476.063 269.092V269.151C476.122 271.309 476.122 274.051 476.122 276.909C476.122 282.334 476.063 288.459 475.947 293.068V293.126C475.947 294.293 476.822 294.935 477.697 294.935C478.513 294.935 479.33 294.351 479.33 293.185V293.126C479.272 290.501 479.213 286.126 479.213 282.568C479.213 280.351 479.213 278.426 479.272 277.434C479.447 273.118 483.472 270.142 487.147 270.142C490.005 270.142 492.689 272.009 492.922 276.559C492.98 277.551 492.98 279.943 492.98 282.684C492.98 286.418 492.98 290.793 492.922 293.126V293.185C492.922 294.293 493.739 294.818 494.555 294.818C495.43 294.818 496.305 294.235 496.305 293.185V293.126C496.247 290.093 496.189 285.718 496.189 282.159C496.189 280.001 496.189 278.134 496.247 277.143C496.422 273.176 500.506 270.317 504.239 270.317C507.097 270.317 509.781 272.068 510.014 276.559C510.072 277.551 510.072 279.943 510.072 282.684C510.072 286.418 510.072 290.793 510.014 293.126V293.185ZM449.115 290.618C449.231 291.61 450.048 294.701 451.973 294.701C452.906 294.701 453.781 294.001 453.781 293.068C453.781 292.718 453.665 292.31 453.373 291.901C451.856 289.743 451.623 287.059 451.623 283.326C451.623 278.426 451.681 273.643 451.798 269.151V269.092C451.798 268.042 450.865 267.459 449.99 267.459C449.115 267.459 448.298 267.984 448.298 269.034V269.092L448.304 269.4C448.36 272.385 448.415 275.321 448.415 278.309C448.415 280.261 448.358 282.212 448.301 284.162L448.298 284.259C448.181 289.043 443.748 292.135 439.664 292.135C436.398 292.135 433.364 290.151 433.073 285.368C433.014 284.434 432.956 282.393 432.956 279.943C432.956 276.151 433.014 271.543 433.073 269.092V269.034C433.073 267.984 432.198 267.401 431.323 267.401C430.448 267.401 429.631 267.926 429.631 269.092C429.573 270.317 429.573 272.009 429.573 273.818C429.573 278.251 429.689 283.676 429.748 285.776C429.923 292.193 434.589 295.11 439.431 295.11C443.106 295.11 446.84 293.476 448.823 290.443C448.859 290.37 448.895 290.343 448.932 290.332C448.954 290.326 448.976 290.326 448.998 290.326C449.056 290.326 449.056 290.385 449.115 290.618ZM433.889 333.834C428.755 333.834 425.955 337.101 425.955 340.543C425.955 343.051 427.472 345.618 430.68 347.018C437.447 350.051 439.956 351.218 439.956 354.309C439.956 356.818 437.447 358.685 434.122 358.685C431.264 358.685 429.164 357.576 427.88 355.768C427.472 355.243 426.947 355.009 426.422 355.009C425.547 355.009 424.672 355.709 424.672 356.701C424.672 358.335 428.055 361.835 434.122 361.835C440.656 361.835 443.397 357.635 443.397 354.309C443.397 351.626 441.822 348.884 438.205 347.018C437.022 346.407 435.466 345.722 434.073 345.109C433.336 344.784 432.645 344.48 432.08 344.218C430.155 343.284 429.222 341.826 429.222 340.426C429.222 338.501 430.914 336.751 433.889 336.751C436.397 336.751 437.855 337.684 438.789 338.793C439.256 339.376 439.839 339.609 440.306 339.609C441.239 339.609 441.997 338.851 441.997 337.917C441.997 336.342 438.847 333.834 433.889 333.834ZM406.415 291.785C405.831 291.843 405.306 291.901 404.781 291.901C400.231 291.901 400.114 288.809 400.114 284.259C400.114 281.745 400.173 278.656 400.223 276.077C400.258 274.229 400.289 272.643 400.289 271.718C400.289 270.959 400.289 270.842 401.223 270.842H406.356C407.465 270.842 407.99 270.084 407.99 269.326C407.99 268.567 407.465 267.809 406.356 267.809H401.164C400.406 267.809 400.289 267.809 400.289 267.167C400.289 267.167 400.406 262.501 400.406 260.809C400.406 259.584 399.589 259.001 398.714 259.001C397.898 259.001 397.023 259.584 397.023 260.692V262.151C397.023 263.676 396.99 265.624 396.973 266.61C396.968 266.943 396.964 267.167 396.964 267.226C396.964 267.751 396.848 267.809 396.323 267.809H392.939C391.831 267.809 391.306 268.567 391.306 269.326C391.306 270.084 391.831 270.842 392.939 270.842H396.381C396.789 270.842 396.964 270.959 396.964 271.543V272.476C396.964 273.81 396.939 276.071 396.912 278.483C396.881 281.24 396.848 284.193 396.848 286.184C396.848 288.751 396.848 295.11 404.315 295.11C406.648 295.11 408.048 294.818 408.048 293.301C408.048 292.543 407.523 291.785 406.648 291.785H406.415ZM400.348 347.368C403.264 347.309 404.606 345.676 404.606 343.459C404.606 340.134 401.106 333.892 393.114 333.892C386.231 333.892 380.106 339.493 380.106 348.009C380.106 356.234 385.881 361.776 393.289 361.776C400.639 361.776 404.723 357.343 404.723 356.001C404.723 355.068 403.848 354.309 402.973 354.309C402.564 354.309 402.156 354.484 401.806 354.834C399.998 356.876 397.606 358.685 393.348 358.685C387.748 358.685 383.547 354.776 383.547 348.418C383.547 347.601 383.664 347.368 384.247 347.368C384.698 347.368 385.603 347.375 386.777 347.385C388.943 347.402 392.026 347.426 394.864 347.426C397.023 347.426 399.006 347.426 400.348 347.368ZM391.306 344.568C384.539 344.568 384.014 344.568 384.014 343.984C384.014 341.826 387.573 336.809 393.173 336.809C399.123 336.809 401.164 341.184 401.164 342.876C401.164 343.809 400.639 344.451 399.239 344.509C397.606 344.568 394.339 344.568 391.306 344.568ZM367.798 293.243C367.798 294.293 368.673 294.876 369.548 294.876C370.423 294.876 371.24 294.351 371.24 293.185C371.298 291.612 371.298 289.223 371.298 286.776V286.768C371.298 282.743 371.24 278.426 371.181 276.559C370.948 270.376 366.281 267.226 361.44 267.226C358.231 267.226 354.906 268.626 352.806 271.426C352.748 271.543 352.631 271.601 352.573 271.601C352.573 271.601 352.514 271.543 352.514 271.368V269.151C352.514 268.042 351.698 267.576 350.881 267.576C349.948 267.576 349.014 268.159 349.014 269.092V269.151C349.073 271.718 349.131 274.751 349.131 278.018C349.131 282.976 349.014 288.401 348.898 293.126V293.185C348.898 294.235 349.831 294.818 350.706 294.818C351.581 294.818 352.398 294.293 352.398 293.243V293.185C352.339 291.085 352.339 289.159 352.339 287.293C352.339 283.268 352.398 280.059 352.456 278.251C352.573 273.584 357.181 270.434 361.265 270.434C364.531 270.434 367.506 272.418 367.798 277.143C367.856 278.076 367.915 280.118 367.915 282.509C367.915 286.184 367.856 290.735 367.798 293.185V293.243ZM353.798 335.992C353.565 335.992 353.332 335.934 353.04 335.759C350.765 334.476 348.432 334.009 345.807 334.009H345.69C340.207 334.009 335.131 337.276 335.131 343.284C335.131 346.609 337.057 349.176 339.273 350.459C339.682 350.693 340.032 350.809 340.032 350.926C340.032 351.043 339.857 351.159 339.448 351.393C335.773 353.259 335.365 355.534 335.365 356.701C335.365 358.743 336.882 360.026 338.807 360.61C339.187 360.737 339.476 360.772 339.606 360.803C339.655 360.815 339.682 360.827 339.682 360.843C339.682 360.881 339.584 360.919 339.404 360.988C339.306 361.026 339.184 361.073 339.04 361.135C336.007 362.301 333.556 364.751 333.556 368.018C333.556 373.91 340.44 376.71 346.798 376.71C355.782 376.71 361.44 372.276 361.44 366.385C361.44 362.126 358.057 359.443 353.623 358.801C352.165 358.568 351.757 358.51 344.173 358.51C341.373 358.51 338.573 358.335 338.573 356.468C338.573 354.193 342.132 352.326 345.982 352.151C352.807 351.918 356.599 348.301 356.599 343.226C356.599 342.234 356.482 340.776 355.899 339.493C355.84 339.318 355.782 339.201 355.782 339.084C355.782 338.384 356.89 337.392 358.815 337.392C359.107 337.392 359.457 337.392 359.749 337.451C359.807 337.451 359.879 337.465 359.952 337.48C360.025 337.495 360.098 337.509 360.157 337.509C361.149 337.509 361.674 336.692 361.674 335.934C361.674 335.176 361.324 334.184 358.99 334.184C357.357 334.184 356.015 334.709 354.499 335.759C354.265 335.934 354.032 335.992 353.798 335.992ZM346.39 373.618C339.565 373.618 336.765 370.585 336.765 367.843C336.765 364.11 341.14 361.66 345.165 361.426C345.923 361.368 346.857 361.368 347.79 361.368C351.873 361.368 357.999 361.426 357.999 366.501C357.999 371.168 352.457 373.618 346.39 373.618ZM338.398 343.109C338.398 338.909 342.015 336.692 345.865 336.692C346.798 336.692 353.39 336.984 353.39 343.051C353.39 349.176 346.448 349.468 345.69 349.468C345.165 349.468 338.398 349.468 338.398 343.109ZM323.582 288.168C321.774 290.209 319.382 292.018 315.123 292.018C309.523 292.018 305.323 288.109 305.323 281.751C305.323 280.934 305.44 280.701 306.023 280.701C306.474 280.701 307.379 280.708 308.553 280.718C310.719 280.735 313.802 280.759 316.64 280.759C318.799 280.759 320.782 280.759 322.124 280.701C325.04 280.643 326.382 279.009 326.382 276.793C326.382 273.468 322.882 267.226 314.89 267.226C308.007 267.226 301.882 272.826 301.882 281.343C301.882 289.568 307.657 295.11 315.065 295.11C322.415 295.11 326.499 290.676 326.499 289.334C326.499 288.401 325.624 287.643 324.749 287.643C324.34 287.643 323.932 287.818 323.582 288.168ZM321.015 277.843C319.382 277.901 316.115 277.901 313.082 277.901C306.315 277.901 305.79 277.901 305.79 277.318C305.79 275.159 309.348 270.142 314.948 270.142C320.899 270.142 322.94 274.518 322.94 276.209C322.94 277.143 322.415 277.784 321.015 277.843ZM311.099 344.393C311.157 343.809 311.157 343.284 311.157 342.759C311.157 336.226 307.482 333.834 302.057 333.834C297.04 333.834 292.14 336.342 292.14 338.559C292.14 339.493 292.898 340.134 293.773 340.134C294.182 340.134 294.648 339.959 294.998 339.551C296.34 338.092 298.673 336.751 301.823 336.751C306.549 336.751 307.89 339.259 307.89 342.468C307.89 342.759 307.832 343.109 307.832 343.401C307.832 343.809 307.599 343.984 306.899 344.101C304.449 344.509 299.723 345.384 296.107 346.493C291.79 347.834 289.865 350.809 289.865 353.726C289.865 357.751 293.423 361.776 299.315 361.776C302.873 361.776 306.782 359.968 308.532 356.993C308.59 356.876 308.707 356.818 308.707 356.818C308.808 356.818 308.822 356.861 308.861 356.986C308.867 357.006 308.874 357.027 308.882 357.051C309.699 360.26 312.615 361.076 312.965 361.076C314.015 361.076 314.715 360.085 314.715 359.268C314.715 358.801 314.54 358.335 314.074 358.101C311.74 356.876 310.807 355.709 310.807 350.868C310.807 348.943 310.924 346.318 311.099 344.393ZM307.015 347.076H307.19C307.599 347.076 307.774 347.251 307.774 347.718C307.774 348.076 307.759 348.418 307.744 348.752C307.729 349.073 307.715 349.387 307.715 349.701C307.715 354.659 304.624 358.685 299.257 358.685C295.348 358.685 293.015 356.234 293.015 353.784C293.015 349.701 297.857 348.534 307.015 347.076ZM276.158 293.185C276.158 294.293 277.033 294.935 277.908 294.935C278.725 294.935 279.6 294.293 279.6 293.01V290.385C279.6 285.834 279.541 278.426 279.483 275.976C279.308 270.259 275.166 267.226 270.675 267.226C267.291 267.226 263.791 268.917 261.574 272.359C260.408 268.859 257.141 267.226 253.758 267.226C250.783 267.226 247.633 268.509 245.766 270.901C245.708 271.017 245.649 271.076 245.591 271.076C245.533 271.076 245.533 270.959 245.533 270.726V269.151C245.533 268.042 244.716 267.517 243.899 267.517C243.024 267.517 242.207 268.042 242.207 269.092V269.151C242.266 271.309 242.266 274.051 242.266 276.909C242.266 282.334 242.207 288.459 242.091 293.068V293.126C242.091 294.293 242.966 294.935 243.841 294.935C244.658 294.935 245.474 294.351 245.474 293.185V293.126C245.416 290.501 245.358 286.126 245.358 282.568C245.358 280.351 245.358 278.426 245.416 277.434C245.591 273.118 249.616 270.142 253.291 270.142C256.149 270.142 258.833 272.009 259.066 276.559C259.124 277.551 259.124 279.943 259.124 282.684C259.124 286.418 259.124 290.793 259.066 293.126V293.185C259.066 294.293 259.883 294.818 260.699 294.818C261.574 294.818 262.449 294.235 262.449 293.185V293.126C262.391 290.093 262.333 285.718 262.333 282.159C262.333 280.001 262.333 278.134 262.391 277.143C262.566 273.176 266.65 270.317 270.383 270.317C273.241 270.317 275.925 272.068 276.158 276.559C276.216 277.551 276.216 279.943 276.216 282.684C276.216 286.418 276.216 290.793 276.158 293.126V293.185ZM258.658 333.892C255.275 333.892 251.775 335.584 249.558 339.026C248.391 335.526 245.124 333.892 241.741 333.892C238.766 333.892 235.616 335.176 233.749 337.567C233.691 337.684 233.633 337.742 233.574 337.742C233.516 337.742 233.516 337.626 233.516 337.392V335.817C233.516 334.709 232.699 334.184 231.883 334.184C231.008 334.184 230.191 334.709 230.191 335.759V335.817C230.249 337.976 230.249 340.718 230.249 343.576C230.249 349.001 230.191 355.126 230.074 359.735V359.793C230.074 360.96 230.949 361.601 231.824 361.601C232.641 361.601 233.458 361.018 233.458 359.851V359.793C233.399 357.168 233.341 352.793 233.341 349.234C233.341 347.018 233.341 345.093 233.399 344.101C233.574 339.784 237.599 336.809 241.274 336.809C244.133 336.809 246.816 338.676 247.049 343.226C247.108 344.218 247.108 346.609 247.108 349.351C247.108 353.084 247.108 357.459 247.049 359.793V359.851C247.049 360.96 247.866 361.485 248.683 361.485C249.558 361.485 250.433 360.901 250.433 359.851V359.793C250.375 356.759 250.316 352.384 250.316 348.826C250.316 346.668 250.316 344.801 250.375 343.809C250.55 339.843 254.633 336.984 258.366 336.984C261.225 336.984 263.908 338.734 264.141 343.226C264.2 344.218 264.2 346.609 264.2 349.351C264.2 353.084 264.2 357.459 264.141 359.793V359.851C264.141 360.96 265.016 361.601 265.891 361.601C266.708 361.601 267.583 360.96 267.583 359.676V357.051C267.583 352.501 267.525 345.093 267.467 342.643C267.291 336.926 263.15 333.892 258.658 333.892ZM192.566 281.109C192.566 289.509 198.283 295.11 206.042 295.11C213.8 295.11 219.633 289.509 219.633 281.109C219.633 273.001 213.8 267.167 206.042 267.167C198.283 267.167 192.566 273.001 192.566 281.109ZM195.95 281.109C195.95 274.518 200.441 270.201 206.042 270.201C211.642 270.201 216.192 274.518 216.192 281.109C216.192 287.643 211.642 291.96 206.042 291.96C200.441 291.96 195.95 287.643 195.95 281.109ZM167.251 292.893C167.309 294.06 168.301 294.643 169.292 294.643C170.226 294.643 171.159 294.06 171.159 292.893V292.718C170.634 284.201 169.467 264.309 169.292 256.551C169.234 253.576 167.192 252 165.034 252C163.167 252 161.242 253.167 160.426 255.734L159.686 258.093C150.088 288.674 149.844 289.451 148.934 289.451C148.584 289.451 148.292 289.159 148.059 288.518C146.668 284.589 144.761 278.248 142.825 271.809C141.023 265.819 139.196 259.743 137.734 255.442C136.975 253.226 135.167 252.117 133.417 252.117C131.375 252.117 129.45 253.576 129.275 256.259C129.092 259.67 128.765 264.447 128.41 269.623C127.862 277.636 127.248 286.607 127 292.951V293.068C127 294.118 127.933 294.701 128.925 294.701C129.858 294.701 130.85 294.176 130.85 293.01C131.142 284.726 132.308 262.909 132.775 257.601C132.892 256.609 133.242 256.142 133.65 256.142C134.059 256.142 134.525 256.609 134.817 257.542C135.839 260.634 137.655 266.59 139.526 272.724C141.927 280.597 144.417 288.764 145.434 291.551C146.134 293.301 147.475 294.118 148.875 294.118C150.334 294.118 151.792 293.185 152.434 291.551C155.351 283.793 161.067 265.592 163.517 257.484C163.809 256.492 164.334 256.084 164.742 256.084C165.267 256.084 165.676 256.609 165.734 257.542C165.734 257.542 166.609 284.318 167.251 292.893ZM204.641 320.476C204.641 319.309 203.65 318.667 202.716 318.667C201.725 318.667 200.733 319.309 200.733 320.592V320.651C200.85 326.076 200.908 332.259 200.908 338.559C200.908 345.618 200.85 352.851 200.733 359.385V359.443C200.733 360.668 201.725 361.251 202.658 361.251C203.65 361.251 204.641 360.668 204.641 359.443V359.385C204.583 352.793 204.525 345.909 204.525 339.259C204.525 332.609 204.583 326.192 204.641 320.534V320.476Z' />\n  </svg>\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nexport default ({ title, description, path, image }) => (\n  <Helmet>\n    <title>title</title>\n    <meta name='title' content={title} />\n    <meta name='og:title' content={title} />\n    <meta name='description' content={description} />\n    <meta name='og:description' content={description} />\n    <meta name='og:url' content={`https://momentumimages.co.uk/${path}`} />\n\n    <title>{title}</title>\n    <meta name='title' content={title} />\n    <meta name='description' content={description} />\n\n    <meta property='og:type' content='website' />\n    <meta property='og:url' content={`https://momentumimages.co.uk/${path}`} />\n    <meta property='og:title' content={title} />\n    <meta property='og:description' content={description} />\n    <meta property='og:image' content={image} />\n\n    <meta property='twitter:card' content='summary_large_image' />\n    <meta property='twitter:url' content={`https://momentumimages.co.uk/${path}`} />\n    <meta property='twitter:title' content={title} />\n    <meta property='twitter:description' content={description} />\n    <meta property='twitter:image' content={image} />\n  </Helmet>\n)\n","import React, { useState, useEffect } from 'react'\nimport { Route, Switch, Link, useHistory } from 'react-router-dom'\nimport Brand from './brand'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebookF, faInstagram } from '@fortawesome/free-brands-svg-icons'\nimport MetaData from './meta-data'\n\nconst RouteHead = ({\n  title,\n  description,\n  src\n}) => (\n  <>\n    <MetaData\n      title={title}\n      description={description}\n      image={`${src}-meta.jpg`}\n    />\n    <img src={`/${src}-title.jpg`} alt={description} />\n  </>\n)\n\nexport default () => {\n  const [active, setActive] = useState(false)\n\n  const history = useHistory()\n  useEffect(() => {\n    history.listen((location, action) => {\n      setActive(false)\n    })\n  })\n\n  return (\n    <section className='hero is-black is-oswald'>\n      <div className='image is-3by1'>\n        <div className='hero-image-shadow' />\n        <Switch>\n          <Route exact path='/about'>\n            <RouteHead\n              title='Momentum Images - About'\n              description='Learn more about Momentum Images from who we are to what we do'\n              src='about'\n            />\n          </Route>\n          <Route exact path='/tcs'>\n            <RouteHead\n              title=\"Momentum Images - T&C's\"\n              description='The outline of our Terms and Conditions for Momentum Images'\n              src='tcs'\n            />\n          </Route>\n          <Route exact path='/contact'>\n            <RouteHead\n              title='Momentum Images - Contact'\n              description='Get in touch via email, Facebook or Instagram with us at Momentum Images'\n              src='contact'\n            />\n          </Route>\n          <Route exact path='/portfolio/dance'>\n            <RouteHead\n              title='Momentum Images - Dance Portfolio'\n              description='Our greatest and latest dance photos taken by Momentum Images with the backdrop of the Lake District'\n              src='portfolio_dance'\n            />\n          </Route>\n          <Route exact path='/portfolio/family'>\n            <RouteHead\n              title='Momentum Images - Family Portfolio'\n              description='Our greatest and latest family photos taken by Momentum Images with the backdrop of the Lake District'\n              src='portfolio_family'\n            />\n          </Route>\n          <Route exact path='/portfolio/portrait'>\n            <RouteHead\n              title='Momentum Images - Portrait Portfolio'\n              description='Our greatest and latest portrait photos taken by Momentum Images with the backdrop of the Lake District'\n              src='portfolio_portrait'\n            />\n          </Route>\n          <Route exact path='/'>\n            <RouteHead\n              title='Momentum Images'\n              description='Momentum Images creates high-quality images in the inspirational backdrop of the Lake District'\n              src='home'\n            />\n          </Route>\n          <Route exact path='/thanks'>\n            <RouteHead\n              title='Momentum Images - Thanks'\n              description='Thank you for getting in touch, we will get back to you as soon as possible'\n              src='home'\n            />\n          </Route>\n          <Route>\n            <RouteHead\n              title='404 Not Found'\n              description='Momentum Images creates high-quality images in the inspirational backdrop of the Lake District'\n              src='not_found'\n            />\n          </Route>\n        </Switch>\n      </div>\n      <div className='hero-head'>\n        <nav className='navbar is-fixed-top'>\n          <div className='container'>\n            <div className='navbar-brand'>\n              <Link to='/' className='navbar-item'>\n                <Brand />\n              </Link>\n              <span className='navbar-burger burger' onClick={() => { setActive(!active) }}>\n                <span />\n                <span />\n                <span />\n              </span>\n            </div>\n            <div className={`navbar-menu is-${active ? 'active' : 'inactive'}`}>\n              <div className='navbar-end'>\n                <a className='navbar-item is-inline-block' href='https://www.facebook.com/momentum.images.uk' target='_blank' rel='noopener noreferrer'>\n                  <span className='icon'>\n                    <FontAwesomeIcon icon={faFacebookF} />\n                  </span>\n                </a>\n                <a className='navbar-item is-inline-block' href='https://www.instagram.com/momentum.images' target='_blank' rel='noopener noreferrer'>\n                  <span className='icon'>\n                    <FontAwesomeIcon icon={faInstagram} />\n                  </span>\n                </a>\n                <Link to='/' className='navbar-item' onClick={() => { setActive(false) }}>\n                  Home\n                </Link>\n                <div className='navbar-item has-dropdown is-hoverable'>\n                  <Link className='navbar-link' to='/portfolio'>\n                    Portfolio\n                  </Link>\n                  <div className='navbar-dropdown'>\n                    <Link className='navbar-item' to='/portfolio/dance'>\n                      Dance\n                    </Link>\n                    <Link className='navbar-item' to='/portfolio/family'>\n                      Family\n                    </Link>\n                    <Link className='navbar-item' to='/portfolio/portrait'>\n                      Portait\n                    </Link>\n                  </div>\n                </div>\n                <Link to='/about' className='navbar-item' onClick={() => { setActive(false) }}>\n                  About\n                </Link>\n                <Link to='/tcs' className='navbar-item' onClick={() => { setActive(false) }}>\n                  T&Cs\n                </Link>\n                <Link to='/contact' className='navbar-item' onClick={() => { setActive(false) }}>\n                  Contact\n                </Link>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default () => (\n  <>\n    <div>\n      <ul>\n        <li className='home-link is-oswald'>\n          <Link to='/portfolio/dance'>\n            <div className='image is-3by1'>\n              <img src='/portfolio_dance-title.jpg' alt='Leaping daner in The Lakes' />\n              <div className='home-link-label'>DANCE</div>\n            </div>\n          </Link>\n        </li>\n        <li className='home-link is-oswald'>\n          <Link to='/portfolio/family'>\n            <div className='image is-3by1'>\n              <img src='/portfolio_family-title.jpg' alt='Mum and baby in The Lakes' />\n              <div className='home-link-label'>FAMILY</div>\n            </div>\n          </Link>\n        </li>\n        <li className='home-link is-oswald'>\n          <Link to='/portfolio/portrait'>\n            <div className='image is-3by1'>\n              <img src='/portfolio_portrait-title.jpg' alt='Woman in The Lakes' />\n              <div className='home-link-label'>PORTRAIT</div>\n            </div>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </>\n)\n","import React from 'react'\n\nexport default () => (\n  <svg className='loading' width='642' height='630' viewBox='0 0 642 630' xmlns='http://www.w3.org/2000/svg'>\n    <path className='loading-polygon' fillRule='evenodd' clipRule='evenodd' d='M386.253 0.536363L385.763 0L385.102 0.300347L320.273 29.7328L254.833 0.497822L254.17 0.20147L253.683 0.740778L201.752 58.2693L136.5 58.1389L135.774 58.1374L135.548 58.828L114.506 123.151L41.2857 156.393L40.6242 156.694L40.7054 157.416L48.6332 227.891L0.486838 281.227L0 281.766L0.362475 282.396L39.9284 351.127L20.6127 410.173L20.3868 410.863L20.9737 411.292L73.5817 449.675L82.9144 532.639L82.9956 533.361L83.7074 533.506L153.105 547.729L188.879 609.874L189.242 610.503L189.953 610.353L270.492 593.341L319.605 629.174L320.192 629.602L320.78 629.176L371.493 592.486L453.609 609.314L454.321 609.46L454.68 608.828L489.764 547.023L559.658 532.259L560.369 532.109L560.446 531.387L569.16 449.475L620.28 412.49L620.869 412.064L620.646 411.373L601.118 350.86L641.083 280.457L641.441 279.825L640.951 279.288L592.864 226.66L600.42 155.645L600.496 154.922L599.833 154.626L527.34 122.24L507.116 59.5708L506.893 58.8793L506.166 58.8779L439.439 58.7445L386.253 0.536363ZM436.724 58.7391L385.267 2.4218L322.711 30.8222L384.969 58.6356L436.724 58.7391ZM317.841 30.8369L254.681 2.62023L204.441 58.2747L257.173 58.3801L317.841 30.8369ZM261.99 58.3898L320.279 31.9263L380.043 58.6258L261.99 58.3898ZM252.787 60.3714L202.639 60.2711L167.661 99.0186L252.787 60.3714ZM164.302 102.74L257.604 60.381L384.54 60.6347L475.645 101.336L541.888 173.835L582.94 301.043L572.755 396.772L526.872 477.602L410.644 561.692L322.278 580.358L230.237 561.495L114.892 477.339L69.918 399.214L58.7575 300.001L99.9763 173.999L164.302 102.74ZM163.096 101.091L199.949 60.2657L137.223 60.1403L116.977 122.029L163.096 101.091ZM116.133 124.609L159.736 104.813L101.508 169.318L116.133 124.609ZM113.662 125.731L42.7741 157.914L50.4228 225.909L98.2074 172.974L113.662 125.731ZM48.9318 230.545L2.45827 282.028L40.7646 348.571L56.7214 299.792L48.9318 230.545ZM58.219 295.214L50.7214 228.563L96.676 177.655L58.219 295.214ZM57.2598 304.579L42.1064 350.901L67.4166 394.868L57.2598 304.579ZM67.977 399.851L41.2702 353.458L22.7395 410.104L73.2784 446.978L67.977 399.851ZM75.7743 451.274L84.8206 531.693L151.773 545.414L113.37 478.704L75.7743 451.274ZM155.721 548.265L190.25 608.246L268.319 591.756L229.409 563.367L155.721 548.265ZM225.518 560.528L154.389 545.951L117.349 481.607L225.518 560.528ZM234.128 564.334L270.951 591.2L317.372 581.394L234.128 564.334ZM322.284 582.401L273.123 592.785L320.197 627.13L368.835 591.941L322.284 582.401ZM373.692 590.895L453.299 607.209L487.151 547.575L411.473 563.561L373.692 590.895ZM491.083 544.701L558.534 530.453L566.981 451.052L528.397 478.967L491.083 544.701ZM524.494 481.791L488.469 545.252L415.463 560.674L524.494 481.791ZM530.774 474.778L567.265 448.377L572.225 401.758L530.774 474.778ZM574.7 397.398L569.444 446.801L618.519 411.296L599.778 353.22L574.7 397.398ZM600.284 348.277L638.985 280.101L592.582 229.316L584.973 300.833L600.284 348.277ZM591.063 224.688L598.354 156.156L528.166 124.799L543.658 172.807L591.063 224.688ZM545.137 177.391L590.78 227.344L583.461 296.146L545.137 177.391ZM540.409 169.251L525.71 123.702L480.223 103.381L540.409 169.251ZM476.841 99.6795L524.884 121.143L505.436 60.8764L441.269 60.7481L476.841 99.6795ZM472.263 97.6344L438.555 60.7427L389.466 60.6446L472.263 97.6344ZM598.944 350.637L575.231 392.412L584.452 305.73L598.944 350.637ZM371.033 590.35L327.189 581.364L406.654 564.579L371.033 590.35ZM75.4709 448.577L70.4785 404.196L110.913 474.436L75.4709 448.577Z' fill='white' />\n    <path fillRule='evenodd' clipRule='evenodd' d='M511.764 294.935C510.889 294.935 510.014 294.293 510.014 293.185V293.126C510.072 290.793 510.072 286.418 510.072 282.684C510.072 279.943 510.072 277.551 510.014 276.559C509.781 272.068 507.097 270.317 504.239 270.317C500.506 270.317 496.422 273.176 496.247 277.143C496.189 278.134 496.189 280.001 496.189 282.159C496.189 285.718 496.247 290.093 496.305 293.126V293.185C496.305 294.235 495.43 294.818 494.555 294.818C493.739 294.818 492.922 294.293 492.922 293.185V293.126C492.98 290.793 492.98 286.418 492.98 282.684C492.98 279.943 492.98 277.551 492.922 276.559C492.689 272.009 490.005 270.142 487.147 270.142C483.472 270.142 479.447 273.118 479.272 277.434C479.213 278.426 479.213 280.351 479.213 282.568C479.213 286.126 479.272 290.501 479.33 293.126V293.185C479.33 294.351 478.513 294.935 477.697 294.935C476.822 294.935 475.947 294.293 475.947 293.126V293.068C476.063 288.459 476.122 282.334 476.122 276.909C476.122 274.051 476.122 271.309 476.063 269.151V269.092C476.063 268.042 476.88 267.517 477.755 267.517C478.572 267.517 479.388 268.042 479.388 269.151V270.726C479.388 270.959 479.388 271.076 479.447 271.076C479.505 271.076 479.563 271.017 479.622 270.901C481.489 268.509 484.639 267.226 487.614 267.226C490.997 267.226 494.264 268.859 495.43 272.359C497.647 268.917 501.147 267.226 504.531 267.226C509.022 267.226 513.164 270.259 513.339 275.976C513.397 278.426 513.456 285.834 513.456 290.385V293.01C513.456 294.293 512.581 294.935 511.764 294.935ZM451.973 294.701C450.048 294.701 449.231 291.61 449.115 290.618C449.056 290.385 449.056 290.326 448.998 290.326C448.94 290.326 448.881 290.326 448.823 290.443C446.84 293.476 443.106 295.11 439.431 295.11C434.589 295.11 429.923 292.193 429.748 285.776C429.689 283.676 429.573 278.251 429.573 273.818C429.573 272.009 429.573 270.317 429.631 269.092C429.631 267.926 430.448 267.401 431.323 267.401C432.198 267.401 433.073 267.984 433.073 269.034V269.092C433.014 271.543 432.956 276.151 432.956 279.943C432.956 282.393 433.014 284.434 433.073 285.368C433.364 290.151 436.398 292.135 439.664 292.135C443.748 292.135 448.181 289.043 448.298 284.259C448.356 282.276 448.415 280.293 448.415 278.309C448.415 275.218 448.356 272.184 448.298 269.092V269.034C448.298 267.984 449.115 267.459 449.99 267.459C450.865 267.459 451.798 268.042 451.798 269.092V269.151C451.681 273.643 451.623 278.426 451.623 283.326C451.623 287.059 451.856 289.743 453.373 291.901C453.665 292.31 453.781 292.718 453.781 293.068C453.781 294.001 452.906 294.701 451.973 294.701ZM425.955 340.543C425.955 337.101 428.755 333.834 433.889 333.834C438.847 333.834 441.997 336.342 441.997 337.917C441.997 338.851 441.239 339.609 440.306 339.609C439.839 339.609 439.256 339.376 438.789 338.793C437.855 337.684 436.397 336.751 433.889 336.751C430.914 336.751 429.222 338.501 429.222 340.426C429.222 341.826 430.155 343.284 432.08 344.218C433.714 344.976 436.397 346.084 438.205 347.018C441.822 348.884 443.397 351.626 443.397 354.309C443.397 357.635 440.656 361.835 434.122 361.835C428.055 361.835 424.672 358.335 424.672 356.701C424.672 355.709 425.547 355.009 426.422 355.009C426.947 355.009 427.472 355.243 427.88 355.768C429.164 357.576 431.264 358.685 434.122 358.685C437.447 358.685 439.956 356.818 439.956 354.309C439.956 351.218 437.447 350.051 430.68 347.018C427.472 345.618 425.955 343.051 425.955 340.543ZM404.781 291.901C405.306 291.901 405.831 291.843 406.415 291.785H406.648C407.523 291.785 408.048 292.543 408.048 293.301C408.048 294.818 406.648 295.11 404.315 295.11C396.848 295.11 396.848 288.751 396.848 286.184C396.848 282.451 396.964 275.334 396.964 272.476V271.543C396.964 270.959 396.789 270.842 396.381 270.842H392.939C391.831 270.842 391.306 270.084 391.306 269.326C391.306 268.567 391.831 267.809 392.939 267.809H396.323C396.848 267.809 396.964 267.751 396.964 267.226C396.964 266.992 397.023 264.192 397.023 262.151V260.692C397.023 259.584 397.898 259.001 398.714 259.001C399.589 259.001 400.406 259.584 400.406 260.809C400.406 262.501 400.289 267.167 400.289 267.167C400.289 267.809 400.406 267.809 401.164 267.809H406.356C407.465 267.809 407.99 268.567 407.99 269.326C407.99 270.084 407.465 270.842 406.356 270.842H401.223C400.289 270.842 400.289 270.959 400.289 271.718C400.289 273.934 400.114 279.943 400.114 284.259C400.114 288.809 400.231 291.901 404.781 291.901ZM404.606 343.459C404.606 345.676 403.264 347.309 400.348 347.368C399.006 347.426 397.023 347.426 394.864 347.426C390.489 347.426 385.531 347.368 384.247 347.368C383.664 347.368 383.547 347.601 383.547 348.418C383.547 354.776 387.748 358.685 393.348 358.685C397.606 358.685 399.998 356.876 401.806 354.834C402.156 354.484 402.564 354.309 402.973 354.309C403.848 354.309 404.723 355.068 404.723 356.001C404.723 357.343 400.639 361.776 393.289 361.776C385.881 361.776 380.106 356.234 380.106 348.009C380.106 339.493 386.231 333.892 393.114 333.892C401.106 333.892 404.606 340.134 404.606 343.459ZM384.014 343.984C384.014 344.568 384.539 344.568 391.306 344.568C394.339 344.568 397.606 344.568 399.239 344.509C400.639 344.451 401.164 343.809 401.164 342.876C401.164 341.184 399.123 336.809 393.173 336.809C387.573 336.809 384.014 341.826 384.014 343.984ZM369.548 294.876C368.673 294.876 367.798 294.293 367.798 293.243V293.185C367.856 290.735 367.915 286.184 367.915 282.509C367.915 280.118 367.856 278.076 367.798 277.143C367.506 272.418 364.531 270.434 361.265 270.434C357.181 270.434 352.573 273.584 352.456 278.251C352.398 280.059 352.339 283.268 352.339 287.293C352.339 289.159 352.339 291.085 352.398 293.185V293.243C352.398 294.293 351.581 294.818 350.706 294.818C349.831 294.818 348.898 294.235 348.898 293.185V293.126C349.014 288.401 349.131 282.976 349.131 278.018C349.131 274.751 349.073 271.718 349.014 269.151V269.092C349.014 268.159 349.948 267.576 350.881 267.576C351.698 267.576 352.514 268.042 352.514 269.151V271.368C352.514 271.543 352.573 271.601 352.573 271.601C352.631 271.601 352.748 271.543 352.806 271.426C354.906 268.626 358.231 267.226 361.44 267.226C366.281 267.226 370.948 270.376 371.181 276.559C371.24 278.426 371.298 282.743 371.298 286.768C371.298 289.218 371.298 291.61 371.24 293.185C371.24 294.351 370.423 294.876 369.548 294.876ZM353.04 335.759C353.332 335.934 353.565 335.992 353.798 335.992C354.032 335.992 354.265 335.934 354.499 335.759C356.015 334.709 357.357 334.184 358.99 334.184C361.324 334.184 361.674 335.176 361.674 335.934C361.674 336.692 361.149 337.509 360.157 337.509C360.04 337.509 359.865 337.451 359.749 337.451C359.457 337.392 359.107 337.392 358.815 337.392C356.89 337.392 355.782 338.384 355.782 339.084C355.782 339.201 355.84 339.318 355.899 339.493C356.482 340.776 356.599 342.234 356.599 343.226C356.599 348.301 352.807 351.918 345.982 352.151C342.132 352.326 338.573 354.193 338.573 356.468C338.573 358.335 341.373 358.51 344.173 358.51C351.757 358.51 352.165 358.568 353.623 358.801C358.057 359.443 361.44 362.126 361.44 366.385C361.44 372.276 355.782 376.71 346.798 376.71C340.44 376.71 333.556 373.91 333.556 368.018C333.556 364.751 336.007 362.301 339.04 361.135C339.448 360.96 339.682 360.901 339.682 360.843C339.682 360.785 339.332 360.785 338.807 360.61C336.882 360.026 335.365 358.743 335.365 356.701C335.365 355.534 335.773 353.259 339.448 351.393C339.857 351.159 340.032 351.043 340.032 350.926C340.032 350.809 339.682 350.693 339.273 350.459C337.057 349.176 335.131 346.609 335.131 343.284C335.131 337.276 340.207 334.009 345.69 334.009H345.807C348.432 334.009 350.765 334.476 353.04 335.759ZM336.765 367.843C336.765 370.585 339.565 373.618 346.39 373.618C352.457 373.618 357.999 371.168 357.999 366.501C357.999 361.426 351.873 361.368 347.79 361.368C346.857 361.368 345.923 361.368 345.165 361.426C341.14 361.66 336.765 364.11 336.765 367.843ZM345.865 336.692C342.015 336.692 338.398 338.909 338.398 343.109C338.398 349.468 345.165 349.468 345.69 349.468C346.448 349.468 353.39 349.176 353.39 343.051C353.39 336.984 346.798 336.692 345.865 336.692ZM315.123 292.018C319.382 292.018 321.774 290.209 323.582 288.168C323.932 287.818 324.34 287.643 324.749 287.643C325.624 287.643 326.499 288.401 326.499 289.334C326.499 290.676 322.415 295.11 315.065 295.11C307.657 295.11 301.882 289.568 301.882 281.343C301.882 272.826 308.007 267.226 314.89 267.226C322.882 267.226 326.382 273.468 326.382 276.793C326.382 279.009 325.04 280.643 322.124 280.701C320.782 280.759 318.799 280.759 316.64 280.759C312.265 280.759 307.307 280.701 306.023 280.701C305.44 280.701 305.323 280.934 305.323 281.751C305.323 288.109 309.523 292.018 315.123 292.018ZM313.082 277.901C316.115 277.901 319.382 277.901 321.015 277.843C322.415 277.784 322.94 277.143 322.94 276.209C322.94 274.518 320.899 270.142 314.948 270.142C309.348 270.142 305.79 275.159 305.79 277.318C305.79 277.901 306.315 277.901 313.082 277.901ZM311.157 342.759C311.157 343.284 311.157 343.809 311.099 344.393C310.924 346.318 310.807 348.943 310.807 350.868C310.807 355.709 311.74 356.876 314.074 358.101C314.54 358.335 314.715 358.801 314.715 359.268C314.715 360.085 314.015 361.076 312.965 361.076C312.615 361.076 309.699 360.26 308.882 357.051C308.824 356.876 308.824 356.818 308.707 356.818C308.707 356.818 308.59 356.876 308.532 356.993C306.782 359.968 302.873 361.776 299.315 361.776C293.423 361.776 289.865 357.751 289.865 353.726C289.865 350.809 291.79 347.834 296.107 346.493C299.723 345.384 304.449 344.509 306.899 344.101C307.599 343.984 307.832 343.809 307.832 343.401C307.832 343.109 307.89 342.759 307.89 342.468C307.89 339.259 306.549 336.751 301.823 336.751C298.673 336.751 296.34 338.092 294.998 339.551C294.648 339.959 294.182 340.134 293.773 340.134C292.898 340.134 292.14 339.493 292.14 338.559C292.14 336.342 297.04 333.834 302.057 333.834C307.482 333.834 311.157 336.226 311.157 342.759ZM307.19 347.076H307.015C297.857 348.534 293.015 349.701 293.015 353.784C293.015 356.234 295.348 358.685 299.257 358.685C304.624 358.685 307.715 354.659 307.715 349.701C307.715 349.059 307.774 348.418 307.774 347.718C307.774 347.251 307.599 347.076 307.19 347.076ZM277.908 294.935C277.033 294.935 276.158 294.293 276.158 293.185V293.126C276.216 290.793 276.216 286.418 276.216 282.684C276.216 279.943 276.216 277.551 276.158 276.559C275.925 272.068 273.241 270.317 270.383 270.317C266.65 270.317 262.566 273.176 262.391 277.143C262.333 278.134 262.333 280.001 262.333 282.159C262.333 285.718 262.391 290.093 262.449 293.126V293.185C262.449 294.235 261.574 294.818 260.699 294.818C259.883 294.818 259.066 294.293 259.066 293.185V293.126C259.124 290.793 259.124 286.418 259.124 282.684C259.124 279.943 259.124 277.551 259.066 276.559C258.833 272.009 256.149 270.142 253.291 270.142C249.616 270.142 245.591 273.118 245.416 277.434C245.358 278.426 245.358 280.351 245.358 282.568C245.358 286.126 245.416 290.501 245.474 293.126V293.185C245.474 294.351 244.658 294.935 243.841 294.935C242.966 294.935 242.091 294.293 242.091 293.126V293.068C242.207 288.459 242.266 282.334 242.266 276.909C242.266 274.051 242.266 271.309 242.207 269.151V269.092C242.207 268.042 243.024 267.517 243.899 267.517C244.716 267.517 245.533 268.042 245.533 269.151V270.726C245.533 270.959 245.533 271.076 245.591 271.076C245.649 271.076 245.708 271.017 245.766 270.901C247.633 268.509 250.783 267.226 253.758 267.226C257.141 267.226 260.408 268.859 261.574 272.359C263.791 268.917 267.291 267.226 270.675 267.226C275.166 267.226 279.308 270.259 279.483 275.976C279.541 278.426 279.6 285.834 279.6 290.385V293.01C279.6 294.293 278.725 294.935 277.908 294.935ZM249.558 339.026C251.775 335.584 255.275 333.892 258.658 333.892C263.15 333.892 267.291 336.926 267.467 342.643C267.525 345.093 267.583 352.501 267.583 357.051V359.676C267.583 360.96 266.708 361.601 265.891 361.601C265.016 361.601 264.141 360.96 264.141 359.851V359.793C264.2 357.459 264.2 353.084 264.2 349.351C264.2 346.609 264.2 344.218 264.141 343.226C263.908 338.734 261.225 336.984 258.366 336.984C254.633 336.984 250.55 339.843 250.375 343.809C250.316 344.801 250.316 346.668 250.316 348.826C250.316 352.384 250.375 356.759 250.433 359.793V359.851C250.433 360.901 249.558 361.485 248.683 361.485C247.866 361.485 247.049 360.96 247.049 359.851V359.793C247.108 357.459 247.108 353.084 247.108 349.351C247.108 346.609 247.108 344.218 247.049 343.226C246.816 338.676 244.133 336.809 241.274 336.809C237.599 336.809 233.574 339.784 233.399 344.101C233.341 345.093 233.341 347.018 233.341 349.234C233.341 352.793 233.399 357.168 233.458 359.793V359.851C233.458 361.018 232.641 361.601 231.824 361.601C230.949 361.601 230.074 360.96 230.074 359.793V359.735C230.191 355.126 230.249 349.001 230.249 343.576C230.249 340.718 230.249 337.976 230.191 335.817V335.759C230.191 334.709 231.008 334.184 231.883 334.184C232.699 334.184 233.516 334.709 233.516 335.817V337.392C233.516 337.626 233.516 337.742 233.574 337.742C233.633 337.742 233.691 337.684 233.749 337.567C235.616 335.176 238.766 333.892 241.741 333.892C245.124 333.892 248.391 335.526 249.558 339.026ZM206.042 295.11C198.283 295.11 192.566 289.509 192.566 281.109C192.566 273.001 198.283 267.167 206.042 267.167C213.8 267.167 219.633 273.001 219.633 281.109C219.633 289.509 213.8 295.11 206.042 295.11ZM206.042 270.201C200.441 270.201 195.95 274.518 195.95 281.109C195.95 287.643 200.441 291.96 206.042 291.96C211.642 291.96 216.192 287.643 216.192 281.109C216.192 274.518 211.642 270.201 206.042 270.201ZM169.292 294.643C168.301 294.643 167.309 294.06 167.251 292.893C166.609 284.318 165.734 257.542 165.734 257.542C165.676 256.609 165.267 256.084 164.742 256.084C164.334 256.084 163.809 256.492 163.517 257.484C161.067 265.592 155.351 283.793 152.434 291.551C151.792 293.185 150.334 294.118 148.875 294.118C147.475 294.118 146.134 293.301 145.434 291.551C143.625 286.593 137.15 264.601 134.817 257.542C134.525 256.609 134.059 256.142 133.65 256.142C133.242 256.142 132.892 256.609 132.775 257.601C132.308 262.909 131.142 284.726 130.85 293.01C130.85 294.176 129.858 294.701 128.925 294.701C127.933 294.701 127 294.118 127 293.068V292.951C127.408 282.509 128.808 264.951 129.275 256.259C129.45 253.576 131.375 252.117 133.417 252.117C135.167 252.117 136.975 253.226 137.734 255.442C140.767 264.367 145.375 280.934 148.059 288.518C148.292 289.159 148.584 289.451 148.934 289.451C149.867 289.451 150.1 288.634 160.426 255.734C161.242 253.167 163.167 252 165.034 252C167.192 252 169.234 253.576 169.292 256.551C169.467 264.309 170.634 284.201 171.159 292.718V292.893C171.159 294.06 170.226 294.643 169.292 294.643ZM202.716 318.667C203.65 318.667 204.641 319.309 204.641 320.476V320.534C204.583 326.192 204.525 332.609 204.525 339.259C204.525 345.909 204.583 352.793 204.641 359.385V359.443C204.641 360.668 203.65 361.251 202.658 361.251C201.725 361.251 200.733 360.668 200.733 359.443V359.385C200.85 352.851 200.908 345.618 200.908 338.559C200.908 332.259 200.85 326.076 200.733 320.651V320.592C200.733 319.309 201.725 318.667 202.716 318.667Z' fill='white' />\n  </svg>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { LazyImage } from 'react-lazy-images'\nimport Loading from './loading'\n\nconst Placeholder = ({ ref }) => <div ref={ref} className='image is-1by1 placeholder'><Loading /></div>\n\nPlaceholder.propTypes = {\n  ref: PropTypes.any.isRequired\n}\n\nconst Image = ({ src, alt, orientation }) => (\n  <LazyImage\n    className={`image is-${orientation === 'portrait' ? '4by5' : '16by9'}`}\n    src={src}\n    alt={alt}\n    debounceDurationMs={400}\n    placeholder={Placeholder}\n    actual={({ imageProps }) => (\n      <img alt='Placeholder description' {...imageProps} className={`image is-${orientation === 'portrait' ? '4by5' : '16by9'} is-loaded`} />\n    )}\n  />\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  orientation: PropTypes.string.isRequired\n}\n\nexport default Image\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport fetchImages from './fetch-images'\nimport Image from './image'\n\nexport default () => {\n  const { portfolio } = useParams()\n\n  const images = fetchImages(portfolio)\n\n  return (\n    <div className='portfolio'>\n      <div className='columns is-multiline'>\n        {images.map(({ file, name, orientation, size }, index) => {\n          return (\n            <div key={file} className={`column is-${size}`}>\n              <Image\n                src={`/portfolio/${portfolio}/${file}`}\n                alt={name}\n                orientation={orientation}\n              />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import data from './data.json'\n\nexport default (portfolio) => {\n  return data[portfolio].map(file => {\n    const [index, orientation, name] = file.split('_')\n    return {\n      file,\n      index: Number(index),\n      orientation,\n      name,\n      size: orientation === 'landscape' ? 12 : 6\n    }\n  })\n    .sort((left, right) => {\n      if (left.index < right.index) return -1\n      if (left.index > right.index) return 1\n      return 0\n    })\n}\n","import Validator from 'fastest-validator'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst v = new Validator({\n  messages: {\n    email: 'Invalid {field}',\n    stringEmpty: 'Missing {field}',\n    emailEmpty: 'Missing {field}',\n    string: 'Missing {field}'\n  }\n})\nconst check = v.compile({\n  email: {\n    type: 'email',\n    empty: false\n  },\n  name: { type: 'string', empty: false },\n  message: { type: 'string', empty: false }\n})\n\nexport default () => {\n  const [{ errors, disabled, form }, setState] = useState({\n    errors: {},\n    disabled: true,\n    loading: false,\n    form: {}\n  })\n\n  const validate = (value, key = null) => {\n    if (key !== null) form[key] = value\n    const newErrors = {}\n    const validation = check(form)\n    if (validation !== true) validation.forEach(({ message, field }) => { newErrors[field] = message })\n    setState({\n      errors: newErrors,\n      disabled: Object.keys(newErrors).length > 0,\n      loading: false,\n      form\n    })\n    return validation === true\n  }\n\n  const history = useHistory()\n\n  const submit = async () => {\n    setState({\n      disabled: true,\n      loading: true\n    })\n    try {\n      const res = await fetch('https://formspree.io/f/xknpjdwz', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          accept: 'application/json'\n        },\n        body: JSON.stringify(form)\n      })\n      if (res.ok) history.push(`/thanks?name=${form.name}`)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <form\n      className='contact is-lato'\n      onSubmit={(evt) => {\n        evt.preventDefault()\n        const valid = validate()\n        if (valid) submit()\n      }}\n    >\n      <h1 className='title'>Contact Momentum Images</h1>\n      <div className='field'>\n        <label className='label' htmlFor='name'>Name</label>\n        <div className='control'>\n          <input\n            name='name'\n            id='name'\n            className='input'\n            type='text'\n            placeholder='Name'\n            onChange={(evt) => { validate(evt.target.value, 'name') }}\n          />\n          {'name' in (form || {}) && 'name' in errors && <p className='contact-message has-text-danger'>{errors.name}</p>}\n        </div>\n      </div>\n      <div className='field'>\n        <label className='label' htmlFor='email'>Email</label>\n        <div className='control'>\n          <input\n            className='input'\n            type='text'\n            placeholder='Email'\n            name='email'\n            id='email'\n            onChange={(evt) => { validate(evt.target.value, 'email') }}\n          />\n          {'email' in (form || {}) && 'email' in errors && <p className='contact-message has-text-danger'>{errors.email}</p>}\n        </div>\n      </div>\n      <div className='field'>\n        <label className='label' htmlFor='message'>Message</label>\n        <div className='control'>\n          <textarea\n            name='message'\n            id='message'\n            className='textarea'\n            placeholder='Textarea'\n            onChange={(evt) => { validate(evt.target.value, 'message') }}\n          />\n          {'message' in (form || {}) && 'message' in errors && <p className='contact-message has-text-danger'>{errors.message}</p>}\n        </div>\n      </div>\n      <input type='hidden' name='_subject' value='Contact Form Submission' />\n      <div className='field'>\n        <div className='control'>\n          <input\n            disabled={disabled}\n            type='submit'\n            className='button is-dark is-large'\n            value='Submit'\n          />\n          {Object.keys((form || {})).length === 0 && <p className='contact-message has-text-primary'>All fields are required</p>}\n        </div>\n      </div>\n    </form>\n  )\n}\n","import React from 'react'\n\nexport default () => (\n  <div className='columns'>\n    <div className='column is-one-third'>\n      <figure className='image is-4by5'>\n        <img src='/mel.jpg' alt='Melanie Preston' />\n      </figure>\n    </div>\n    <div className='colmn'>\n      <div className='is-lato about'>\n        <h1 className='title'>Momentum Images</h1>\n        <p className='content'>Melanie Preston has been teaching dance for many years. She has always been passionate about photography and has used this passion to vastly increase her Instagram following through her photos. She has developed a unique style of dance and portrait photography using the stunning backdrop of the Lake District for her inspiration.</p>\n      </div>\n    </div>\n  </div>\n\n)\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilePdf } from '@fortawesome/free-regular-svg-icons'\n\nexport default () => (\n  <div className='tcs is-lato'>\n    <p className='content'>By using any of the images produced by Momentum Images or Melanie Preston you agree to the Terms and Conditions</p>\n    <a href='https://momentumimages.co.uk/momentumimages-terms-and-contditions.pdf' target='_blank' rel='noopener noreferrer'>\n      <span className='icon'>\n        <FontAwesomeIcon icon={faFilePdf} />\n      </span>\n      <span className='tcs-link'>Terms & Conditions</span>\n    </a>\n  </div>\n)\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport qs from 'qs'\n\nexport default () => {\n  const { search } = useLocation()\n  const { name } = qs.parse(search, { ignoreQueryPrefix: true })\n  return (\n    <div className='thanks is-lato'>\n      {name && <h1 className='title'>Thanks, {name}</h1>}\n      {!name && <h1 className='title'>Thank You</h1>}\n      <p className='content'>\n        Thank you for getting in contact with Momentum Images<br />\n        We will try to get back to you as soon as possible<br />Until then please like us on <a href='https://www.facebook.com/momentum.images.uk' target='_blank' rel='noopener noreferrer'>Facebook</a> or follow us on <a href='https://www.instagram.com/momentum.images' target='_blank' rel='noopener noreferrer'>Instagram</a>\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => (\n  <div>\n    Not Found\n  </div>\n)\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Home from './home'\nimport Portfolio from './portfolio'\nimport Contact from './contact'\nimport About from './about'\nimport Tcs from './tcs'\nimport Thanks from './thanks'\nimport NotFound from './not-found'\n\nexport default () => (\n  <main>\n    <section className='section'>\n      <div className='container'>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/portfolio/:portfolio'>\n            <Portfolio />\n          </Route>\n          <Route exact path='/portfolio'>\n            <Redirect to='/' />\n          </Route>\n          <Route exact path='/tcs'>\n            <Tcs />\n          </Route>\n          <Route exact path='/about'>\n            <About />\n          </Route>\n          <Route exact path='/contact'>\n            <Contact />\n          </Route>\n          <Route exact path='/thanks'>\n            <Thanks />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </section>\n  </main>\n)\n","import React, { useState } from 'react'\nimport cookies from 'js-cookie'\n\nexport default () => {\n  const [clicked, setClicked] = useState(false)\n\n  const reject = () => {\n    if (!document.__defineGetter__) {\n      Object.defineProperty(document, 'cookie', {\n        get: function () { return '' },\n        set: function () { return true }\n      })\n    } else {\n      document.__defineGetter__('cookie', function () { return '' })\n      document.__defineSetter__('cookie', function () {})\n    }\n    window.rejected = true\n    setClicked(true)\n  }\n\n  const accept = () => {\n    cookies.set('accept', true)\n    setClicked(true)\n  }\n\n  let show = !clicked\n  if (window.rejected) show = false\n  else if (cookies.getJSON().accept) show = false\n\n  return show\n    ? (\n      <div className='accept-cookies'>\n        <div className='level'>\n          <div className='level-item'>\n            <p className='is-lato'>This website uses cookies to enhance the user experience.</p>\n          </div>\n          <div className='level-item'>\n            <div className='buttons'>\n              <button\n                className='button is-danger is-oswald'\n                onClick={reject}\n              >\n                Reject\n              </button>\n              <button\n                className='button is-warning is-oswald'\n                onClick={accept}\n              >\n                Accept\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      )\n    : null\n}\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Footer from './footer'\nimport Header from './header'\nimport Main from './main'\nimport AcceptCookies from './accept-cookies'\n\nexport default () => (\n  <>\n    <Router>\n      <Header />\n      <Main />\n      <Footer />\n    </Router>\n    <AcceptCookies />\n  </>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import 'bulma/css/bulma.css'\nimport './index.css'\nimport React from 'react'\nimport { hydrate, render } from 'react-dom'\nimport App from './app'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n// import reportWebVitals from './reportWebVitals'\n\nconst rootElement = document.getElementById('root')\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement)\n} else {\n  render(<App />, rootElement)\n}\n\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log)\n"],"sourceRoot":""}